name: Infra (GLOBAL)

on:
  pull_request:
    paths:
      - 'infrastructure/listservice-infra/global/**'
      - '.github/workflows/infra-global.yml'
  push:
    branches: [ main ]
    paths:
      - 'infrastructure/listservice-infra/global/**'
      - '.github/workflows/infra-global.yml'
  workflow_dispatch:
    inputs:
      action:
        description: 'What to do'
        required: true
        type: choice
        options: [ plan, apply, destroy ]
        default: plan

permissions:
  id-token: write
  contents: read

concurrency:
  group: infra-global-${{ github.ref }}
  cancel-in-progress: false

env:
  AWS_REGION: eu-central-1
  TF_ENV_DIR: infrastructure/listservice-infra/global
  TF_VARS_FILE: ""        # optional: set to global.tfvars
  TF_VERSION: 1.9.5

jobs:
  terraform:
    name: Terraform ${{ github.event.inputs.action || 'auto' }} (GLOBAL)
    runs-on: ubuntu-latest
    environment: global
    defaults:
      run:
        working-directory: ${{ env.TF_ENV_DIR }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      # TEMP: Debug OIDC claims
      - name: Debug OIDC token claims (TEMP)
        uses: actions/github-script@v7
        with:
          script: |
            const token = await core.getIDToken('sts.amazonaws.com');
            const payload = JSON.parse(Buffer.from(token.split('.')[1], 'base64').toString());
            core.info(`OIDC sub: ${payload.sub}`);
            core.info(`OIDC aud: ${payload.aud}`);

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::920120424372:role/ListService-Global-Deploy
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init (remote state)
        run: terraform init -reconfigure -backend-config=backend.hcl

    #   - name: Terraform Fmt
    #     run: terraform fmt -check -recursive

      - name: Terraform Validate
        run: terraform validate

      # ---------- PLAN ----------
      - name: Terraform Plan
        if: ${{ github.event_name == 'pull_request' || github.event.inputs.action == 'plan' || github.event_name == 'push' }}
        run: |
          if [ -n "${{ env.TF_VARS_FILE }}" ]; then
            terraform plan -no-color -out=tf.plan -var-file="${{ env.TF_VARS_FILE }}"
          else
            terraform plan -no-color -out=tf.plan
          fi

      # Upload plan for PRs only (for inspection)
      - name: Upload Plan artifact (PR only)
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/upload-artifact@v4
        with:
          name: tf-plan-global
          path: ${{ env.TF_ENV_DIR }}/tf.plan
          retention-days: 7

      # ---------- APPLY ----------
      - name: Terraform Apply (push to main or manual apply)
        if: ${{ (github.event_name == 'push' && github.ref == 'refs/heads/main') || github.event.inputs.action == 'apply' }}
        run: |
          if [ -n "${{ env.TF_VARS_FILE }}" ]; then
            terraform apply -auto-approve -var-file="${{ env.TF_VARS_FILE }}"
          else
            terraform apply -auto-approve
          fi

      # ---------- DESTROY ----------
      - name: Terraform Destroy (manual only)
        if: ${{ github.event.inputs.action == 'destroy' }}
        run: |
          if [ -n "${{ env.TF_VARS_FILE }}" ]; then
            terraform destroy -auto-approve -var-file="${{ env.TF_VARS_FILE }}"
          else
            terraform destroy -auto-approve
          fi
