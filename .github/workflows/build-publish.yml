name: Build and Publish Container

on:
  push:
    branches:
      - main
      - ci
      - staging
      - "*"   # feature branches (safe: tagged by branch name)

env:
  AWS_REGION: eu-central-1
  AWS_ACCOUNT_ID: 920120424372
  ECR_REPO: listservice-global
  IMAGE_NAME: listservice

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Compute lowercase owner
        id: ow
        run: echo "owner_lc=${GITHUB_REPOSITORY_OWNER@L}" >> "$GITHUB_OUTPUT"

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::920120424372:role/ListService-Global-Deploy
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION \
            | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

      - name: Set tags
        id: tags
        shell: bash
        run: |
          BRANCH="${GITHUB_REF##*/}"
          case "$BRANCH" in
            main)    ENV_TAG="latest"  ;;
            ci)      ENV_TAG="ci"      ;;
            staging) ENV_TAG="staging" ;;
            *)       ENV_TAG="$BRANCH" ;;
          esac
          echo "env_tag=$ENV_TAG" >> $GITHUB_OUTPUT
          echo "sha_tag=${GITHUB_SHA}" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Build & push both ENV tag (e.g. latest) and SHA tag.
      # If 'latest' is immutable and already exists, the step may fail.
      # To be robust, we also publish the SHA image in image.txt for the deploy step.
      - name: Build & Push (GHCR + ECR)
        uses: docker/build-push-action@v6
        with:
          context: ./listservice
          file: ./listservice/Dockerfile.ecs
          push: true
          platforms: linux/amd64
          tags: |
            ghcr.io/${{ steps.ow.outputs.owner_lc }}/${{ env.IMAGE_NAME }}:${{ steps.tags.outputs.env_tag }}
            ghcr.io/${{ steps.ow.outputs.owner_lc }}/${{ env.IMAGE_NAME }}:${{ steps.tags.outputs.sha_tag }}
            ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPO }}:${{ steps.tags.outputs.env_tag }}
            ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPO }}:${{ steps.tags.outputs.sha_tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Always emit the SHA-tagged image (stable for deployment)
      - name: Emit image.txt (ECR + SHA)
        run: |
          echo "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPO}:${{ steps.tags.outputs.sha_tag }}" > image.txt
          cat image.txt

      - name: Upload image.txt
        uses: actions/upload-artifact@v4
        with:
          name: container-image
          path: image.txt
          retention-days: 7
