name: Build and Publish (ECR)

on:
  push:
    branches:
      - main
      - ci
      - staging
      - "*"           # feature branches
  workflow_dispatch:
    inputs:
      push_latest:
        description: "Also push :latest (for manual runs)"
        required: false
        default: "false"

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: eu-central-1
  AWS_ACCOUNT_ID: 920120424372
  ECR_REPO: listservice-global
  IMAGE_CONTEXT: ./listservice
  DOCKERFILE: ./listservice/Dockerfile.ecs

jobs:
  build:
    runs-on: ubuntu-latest

    outputs:
      ecr_repo_url: ${{ steps.vars.outputs.ecr_repo_url }}
      sha_tag: ${{ steps.resolve.outputs.sha_tag }}
      pushed_tags: ${{ steps.compose.outputs.tags }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::920120424372:role/ListService-Global-Deploy
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region "${AWS_REGION}" \
            | docker login --username AWS --password-stdin "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com"

      - name: Set variables
        id: vars
        run: |
          echo "ecr_repo_url=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPO}" >> "$GITHUB_OUTPUT"

      - name: Resolve branch/env and SHA
        id: resolve
        shell: bash
        run: |
          BRANCH="${GITHUB_REF##*/}"
          case "$BRANCH" in
            main)    ENV_TAG="latest"  ;;
            ci)      ENV_TAG="ci"      ;;
            staging) ENV_TAG="staging" ;;
            *)       ENV_TAG="$BRANCH" ;;
          esac

          echo "env_tag=${ENV_TAG}" >> "$GITHUB_OUTPUT"
          echo "sha_tag=${GITHUB_SHA}" >> "$GITHUB_OUTPUT"

      - name: Compose tag list (ECR only)
        id: compose
        shell: bash
        run: |
          set -euo pipefail

          ECR="${{ steps.vars.outputs.ecr_repo_url }}"
          SHA="${{ steps.resolve.outputs.sha_tag }}"
          ENV_TAG="${{ steps.resolve.outputs.env_tag }}"

          # Always push SHA tag
          TAGS=("${ECR}:${SHA}")

          # Push env tag if it's one of main/ci/staging (or manual flag requests :latest)
          if [[ "${ENV_TAG}" == "latest" || "${ENV_TAG}" == "ci" || "${ENV_TAG}" == "staging" ]]; then
            TAGS+=("${ECR}:${ENV_TAG}")
          fi

          # Manual override: allow :latest on manual dispatch if requested
          if [[ "${{ github.event_name }}" == "workflow_dispatch" && "${{ github.event.inputs.push_latest }}" == "true" ]]; then
            TAGS+=("${ECR}:latest")
          fi

          # Export multiline output correctly (no quoted EOF!)
          {
            echo "tags<<EOF"
            printf "%s\n" "${TAGS[@]}"
            echo "EOF"
          } >> "$GITHUB_OUTPUT"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & Push (ECR)
        uses: docker/build-push-action@v6
        with:
          context: ${{ env.IMAGE_CONTEXT }}
          file: ${{ env.DOCKERFILE }}
          push: true
          platforms: linux/amd64
          # Feed the newline-separated tag list
          tags: ${{ steps.compose.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
